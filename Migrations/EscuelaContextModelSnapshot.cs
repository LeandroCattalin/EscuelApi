// <auto-generated />
using EscuelApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscuelApi.Migrations
{
    [DbContext(typeof(EscuelaContext))]
    partial class EscuelaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EscuelApi.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<int?>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("EscuelApi.Models.Escuela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Escuelas");
                });

            modelBuilder.Entity("EscuelApi.Models.Profesor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Asignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Edad")
                        .HasColumnType("int");

                    b.Property<int?>("EscuelaId")
                        .HasColumnType("int");

                    b.Property<int?>("Experiencia")
                        .HasColumnType("int");

                    b.Property<int>("IdEscuela")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscuelaId");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("EscuelApi.Models.Alumno", b =>
                {
                    b.HasOne("EscuelApi.Models.Escuela", null)
                        .WithMany("Alumnos")
                        .HasForeignKey("EscuelaId");
                });

            modelBuilder.Entity("EscuelApi.Models.Profesor", b =>
                {
                    b.HasOne("EscuelApi.Models.Escuela", null)
                        .WithMany("Profesores")
                        .HasForeignKey("EscuelaId");
                });

            modelBuilder.Entity("EscuelApi.Models.Escuela", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("Profesores");
                });
#pragma warning restore 612, 618
        }
    }
}
